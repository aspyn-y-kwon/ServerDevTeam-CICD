name: NOVA Deploy

on:
  workflow_call:
    inputs:
      AWS_REGION:
        required: true
        type: string
      S3_BUCKET_NAME:
        required: true
        type: string
      S3_OBJECT_PATH:
        required: true
        type: string
      S3_BINARY_PATH:
        required: true
        type: string
      BUNDLE_TYPE:
        required: true
        type: string
      SOURCE_PATH:
        required: true
        type: string
      AWS_CODEDEPLOY_APP:
        required: true
        type: string
      AWS_DEPLOY_GROUP:
        required: true
        type: string
      


jobs: 
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Get yarm cache directoory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT


      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys:
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: CI=false yarn run build:staging

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRETS_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_REGION }}

      - name: Upload to S3
        run: |
          aws s3 sync ./build s3://${{ inputs.S3_BUCKET_NAME }}/${{ inputs.S3_OBJECT_PATH }}

      - name: Compress build folder
        run: |
          tar czf /tmp/build.tar.gz -C ${{ inputs.SOURCE_PATH }} .

      - name: Upload artifact to S3
        run: |
          aws s3 cp /tmp/build.tar.gz s3://${{ inputs.S3_BUCKET_NAME }}/${{ inputs.S3_BINARY_PATH }}

  deploy:
    name: Deploy to EC2 via CodeDeploy
    needs: build
    runs-on: ubuntu-latest

    steps:
     - name: Deploy with AWS CodeDeploy
       env:
         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRETS_ACCESS_KEY }}
         AWS_CODEDEPLOY_APP: ${{ inputs.AWS_CODEDEPLOY_APP }}
         AWS_DEPLOY_GROUP: ${{ inputs.AWS_DEPLOY_GROUP }}
         AWS_S3_BUCKET: ${{ inputs.S3_BUCKET_NAME }}
         AWS_REGION: ${{ inputs.AWS_REGION }}

       run: |
         aws deploy create-deployment \
         --application-name ${{ env.AWS_CODEDEPLOY_APP }} \
         --deployment-group-name ${{ env.AWS_DEPLOY_GROUP }} \
         --s3-location bucket=${{ env.AWS_S3_BUCKET }},key=${{ inputs.S3_BINARY_PATH }},bundleType=${{ inputs.BUNDLE_TYPE }} \
         --file-exists-behavior OVERWRITE \
         --region ${{ env.AWS_REGION }}
      
